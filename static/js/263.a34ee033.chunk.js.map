{"version":3,"file":"static/js/263.a34ee033.chunk.js","mappings":"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","sources":["components/Genres/Genres.styled.js","components/Genres/Genres.jsx","components/MoviesDetailsList/MoviesDetailsList.styled.js","components/MoviesDetailsList/MoviesDetailsList.jsx","components/ButtonGoBack/ButtonGoBack.styled.js","components/ButtonGoBack/ButtonGoBack.jsx","Pages/MovieDetails.jsx","Services/apiFetcher.js","helpers/transformCastData.js","helpers/transformRewievsData.js","helpers/transformMoviesDataArray.js","helpers/makeSlug.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const TitleH3 = styled.h3`\n  text-align: start;\n  margin-bottom: 5px;\n  font-size: 20px;\n  color: #5b7075;\n  @media (min-width: 768px) {\n    font-size: 20px;\n  }\n  @media (min-width: 1280px) {\n    font-size: 22px;\n  }\n`;\n\nexport const Span = styled.span`\n  font-weight: 400;\n  font-size: 18px;\n  letter-spacing: 0.1em;\n  color: #4cb5f5;\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n  }\n  @media (min-width: 1280px) {\n    font-size: 20px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { TitleH3, Span } from './Genres.styled';\n\nexport const Genres = ({ genreArray }) => {\n  const commaGenres = data => {\n    if (data === null) return;\n    return data.map(gen => gen.name).join(', ');\n  };\n\n  return (\n    <>\n      <TitleH3>Genres: {<Span>{`${commaGenres(genreArray)}`}</Span>}</TitleH3>\n    </>\n\n    // <ul>\n    //   {genreArray.map(({ id, name }) => (\n    //     <li key={id}>{name}</li>\n    //   ))}\n    // </ul>\n  );\n};\nGenres.propTypes = {\n  genreArray: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n// import { ToastContainer } from 'react-toastify';\n\nexport const Title = styled.h2`\n  text-align: center;\n  margin: 35px 0 25px 0;\n  font-size: 28px;\n  font-weight: 500;\n  /* color: #c9d1c8; */\n  color: #5b7075;\n  @media (min-width: 768px) {\n    margin: 25px 0 55px 0;\n  }\n`;\n\nexport const Image = styled.img`\n  border-radius: 5px;\n  width: 250px;\n  margin: 0 auto;\n  @media (max-width: 767px) {\n    margin-bottom: 20px;\n  }\n  @media (min-width: 768px) {\n    align-self: flex-start;\n    width: 350px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  @media (min-width: 768px) {\n    display: flex;\n    gap: 50px;\n    margin-bottom: 23px;\n  }\n`;\n\nexport const ContextWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  gap: 5px;\n`;\n\nexport const Div = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: 0.1em;\n  color: #4cb5f5;\n  @media (min-width: 768px) {\n    font-size: 20px;\n  }\n  @media (min-width: 1280px) {\n    font-size: 24px;\n  }\n`;\n\nexport const TitleH4 = styled.h4`\n  text-align: center;\n  margin: 15px 0 15px 0;\n  font-size: 20px;\n  font-weight: 500;\n  /* color: #c9d1c8; */\n  color: #5b7075;\n`;\n\nexport const Span = styled.span`\n  font-weight: 400;\n  font-size: 18px;\n  letter-spacing: 0.1em;\n  color: #4cb5f5;\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n  }\n  @media (min-width: 1280px) {\n    font-size: 20px;\n  }\n`;\nexport const TitleH3 = styled.h3`\n  text-align: start;\n  margin-bottom: 10px;\n  font-size: 20px;\n  color: #5b7075;\n  @media (min-width: 768px) {\n    font-size: 20px;\n  }\n  @media (min-width: 1280px) {\n    font-size: 22px;\n  }\n`;\n\nexport const DivWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 50px;\n  margin-bottom: 30px;\n`;\n\nexport const AddInfoLink = styled(Link)`\n  font-size: 20px;\n  text-transform: lowercase;\n  color: tomato;\n  @media (min-width: 768px) {\n    font-size: 22px;\n  }\n  @media (min-width: 1280px) {\n    font-size: 24px;\n  }\n`;\n\nexport const Video = styled.iframe`\n  width: 280px;\n  height: 157px;\n  margin: 0 auto;\n  @media (min-width: 768px) {\n    width: 448px;\n    height: 252px;\n    margin: 0;\n  }\n  @media (min-width: 1280px) {\n    width: 504px;\n    height: 284px;\n  }\n`;\n","import { Suspense } from 'react';\nimport { Genres } from 'components/Genres/Genres';\nimport { Loader } from 'components/Loader/Loader';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { setSlug } from 'helpers';\nimport {\n  Title,\n  Image,\n  Video,\n  Div,\n  TitleH3,\n  TitleH4,\n  Span,\n  AddInfoLink,\n  DivWrap,\n  Wrapper,\n  ContextWrap,\n} from './MoviesDetailsList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieDetailsList = ({ movieInfo }) => {\n  const location = useLocation();\n  const {\n    release_date,\n    genres,\n    videos,\n    title,\n    poster_path,\n    vote_average,\n    overview,\n    id,\n  } = movieInfo;\n\n  const normalizeVotes = data => Math.round(data * 10) + '%';\n\n  //   const normalizeYear = data => data.slice(0, 4);\n  const year = new Date(release_date).getFullYear();\n\n  const getVideo = () => {\n    const arrVideos = videos.results;\n    return arrVideos.find(video => video.type === 'Trailer')\n      ? arrVideos.find(video => video.type === 'Trailer').key\n      : arrVideos[0].key;\n  };\n\n  return (\n    release_date && (\n      <>\n        <Title>\n          {title}\n          <span>(</span>\n\n          {/* <span>{normalizeYear(release_date)}</span> */}\n          <span>{year}</span>\n\n          <span>)</span>\n        </Title>\n        <Wrapper>\n          {title && (\n            <Image\n              src={\n                poster_path\n                  ? 'https://image.tmdb.org/t/p/w500' + poster_path\n                  : 'https://louisville.edu/history/images/noimage.jpg/image'\n              }\n              alt={title}\n              width=\"300\"\n            ></Image>\n          )}\n\n          <ContextWrap>\n            <Genres genreArray={genres} />\n            <TitleH3>\n              Overview: <Span>{overview}</Span>\n            </TitleH3>\n\n            <TitleH3>\n              User score: <Span>{normalizeVotes(vote_average)}</Span>\n            </TitleH3>\n            {videos && videos.results.length !== 0 && (\n              <Div>\n                Trailer:\n                <Video\n                  src={`https://www.youtube.com/embed/${getVideo()}`}\n                  frameBorder=\"0\"\n                  allowFullScreen\n                ></Video>\n              </Div>\n            )}\n          </ContextWrap>\n        </Wrapper>\n\n        <TitleH4>Additional information</TitleH4>\n        <DivWrap>\n          <AddInfoLink\n            to={`/movies/${setSlug(`${title} ${id}`)}/cast`}\n            state={location.state}\n          >\n            Cast\n          </AddInfoLink>\n          <AddInfoLink\n            to={`/movies/${setSlug(`${title} ${id}`)}/reviews`}\n            state={location.state}\n          >\n            Reviews\n          </AddInfoLink>\n        </DivWrap>\n\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </>\n    )\n  );\n};\nMovieDetailsList.propTypes = {\n  movieData: PropTypes.shape({\n    title: PropTypes.string,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number,\n    genres: PropTypes.arrayOf(PropTypes.object),\n    release_date: PropTypes.string,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const GoBackButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  background-color: inherit;\n  text-transform: uppercase;\n  border-bottom: 2px solid #304040;\n  color: #5b7075;\n\n  margin: 20px auto 10px;\n  font-size: 18px;\n  transition: transform 250ms linear;\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n","import { useNavigate, useLocation } from 'react-router-dom';\nimport { TiArrowLeftThick } from 'react-icons/ti';\nimport { IconContext } from 'react-icons';\nimport { GoBackButton } from './ButtonGoBack.styled';\n\nexport const ButtonGoBack = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  return (\n    <GoBackButton\n      onClick={() => {\n        navigate(location?.state?.from ?? '/');\n      }}\n    >\n      <IconContext.Provider value={{ size: 35, color: '#3f61b5' }}>\n        <TiArrowLeftThick />\n      </IconContext.Provider>\n      Go back\n    </GoBackButton>\n  );\n};\n","import { useState, useEffect, useRef } from 'react';\nimport Api from '../Services/apiFetcher';\nimport { MovieDetailsList } from '../components/MoviesDetailsList/MoviesDetailsList';\nimport { Loader } from 'components/Loader/Loader';\nimport { ButtonGoBack } from 'components/ButtonGoBack/ButtonGoBack';\nimport { useParams } from 'react-router-dom';\nimport { getSlug } from 'helpers';\n// import slugify from 'slugify';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  // const { movieId } = useParams();\n  const { slug } = useParams();\n  const movieId = getSlug(slug);\n  const isFirstRender = useRef(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // console.log(slug.match(/[0-9a-zA-Z]+$/)[0]);\n\n  useEffect(() => {\n    async function getMovie() {\n      setIsLoading(true);\n      try {\n        const res = await Api.fetchMovieById(movieId);\n        setMovie(res);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    if (isFirstRender.current) {\n      getMovie();\n      isFirstRender.current = false;\n      return;\n    }\n  }, [movieId]);\n\n  return (\n    movie && (\n      <>\n        <ButtonGoBack />\n\n        {isLoading && <Loader />}\n        {movie && <MovieDetailsList movieInfo={movie} />}\n      </>\n    )\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport {\n  transformCastData,\n  transformMoviesDataArray,\n  transformRewievstData,\n} from 'helpers';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst searchParams = new URLSearchParams({\n  api_key: 'cf140a587ec927271eacbad378897741',\n  language: 'en-US',\n});\n\nasync function fetchMoviesByName(keyWord, page = 1) {\n  const search = `search/movie?${searchParams}&query=${keyWord}&page=${page}`;\n\n  const { data } = await axios.get(search);\n  console.log(data);\n\n  return data;\n}\n\nasync function fetchMostPopular() {\n  const search = `trending/movie/day?${searchParams}`;\n\n  const {\n    data: { results },\n  } = await axios(search);\n\n  // const popular = transformMoviesDataArray(results);\n  return transformMoviesDataArray(results);\n}\n\nasync function fetchMovieById(movieId) {\n  const search = `/movie/${movieId}?${searchParams}`;\n\n  const { data } = await axios.get(search, {\n    params: {\n      append_to_response: 'videos',\n    },\n  });\n\n  return data;\n}\n\nasync function fetchActors(movieId) {\n  const search = `/movie/${movieId}/credits?${searchParams}`;\n\n  const {\n    data: { cast },\n  } = await axios(search);\n  const actors = transformCastData(cast);\n  return actors;\n}\n\nasync function fetchReviews(movieId) {\n  const search = `/movie/${movieId}/reviews?${searchParams}`;\n\n  const {\n    data: { results },\n  } = await axios.get(search);\n  const rewievs = transformRewievstData(results);\n  return rewievs;\n}\n\nconst allAPIs = {\n  fetchMoviesByName,\n  fetchMostPopular,\n  fetchMovieById,\n  fetchActors,\n  fetchReviews,\n};\nexport default allAPIs;\n","export const transformCastData = data => {\n  return data.map(({ cast_id, name, gender, profile_path }) => ({\n    id: cast_id,\n    name,\n    gender,\n    profile: profile_path,\n  }));\n};\n","export const transformRewievstData = data => {\n  return data.map(({ author, content, updated_at, id }) => ({\n    id,\n    author,\n    updated: updated_at,\n    content,\n  }));\n};\n","export const transformMoviesDataArray = data => {\n  return data.map(({ release_date, title, poster_path, id }) => ({\n    id,\n    title,\n    release: new Date(release_date).getFullYear(),\n    poster: poster_path,\n  }));\n};\n","import slugify from 'slugify';\nexport const setSlug = string => slugify(string, { lower: true });\nexport const getSlug = string => string.match(/[0-9a-zA-Z]+$/)[0];\n"],"names":["TitleH3","styled","Span","Genres","genreArray","data","map","gen","name","join","commaGenres","Title","Image","Wrapper","ContextWrap","Div","TitleH4","DivWrap","AddInfoLink","Link","Video","MovieDetailsList","movieInfo","location","useLocation","release_date","genres","videos","title","poster_path","vote_average","overview","id","year","Date","getFullYear","src","alt","width","Math","round","results","length","arrVideos","find","video","type","key","getVideo","frameBorder","allowFullScreen","to","setSlug","state","Suspense","fallback","Loader","GoBackButton","ButtonGoBack","navigate","useNavigate","onClick","from","value","size","color","useState","movie","setMovie","slug","useParams","movieId","getSlug","isFirstRender","useRef","isLoading","setIsLoading","useEffect","Api","res","console","log","current","getMovie","axios","searchParams","URLSearchParams","api_key","language","fetchMoviesByName","keyWord","page","search","fetchMostPopular","transformMoviesDataArray","fetchMovieById","params","append_to_response","fetchActors","cast","actors","transformCastData","fetchReviews","rewievs","transformRewievstData","allAPIs","cast_id","gender","profile","profile_path","author","content","updated_at","updated","release","poster","string","slugify","lower","match"],"sourceRoot":""}